name: swagger-ui
kind: pipeline
type: docker

platform:
  os: linux
  arch: amd64

#services:
#  - name: docker
#    image: docker:dind
#    privileged: true
#    volumes:
#      - name: dockersock
#        path: /var/run/

steps:
  - name: generate password
    image: registry.suse.com/bci/bci-base:15.5
    commands:
      - echo "TF_VAR_linode_root_pass=$(openssl rand -base64 32 | tr -d '\n' | base64 -w 0)" > /build_env/linode_root_pass
    volumes:
      - name: build_env
        path: /build_env

  - name: clone base repo
    image: registry.suse.com/bci/bci-base:15.5
    commands:
      - zypper ref && zypper -n in git
      - git clone https://github.com/adamkoro/linode_terraform.git /build_env/setup
    volumes:
      - name: build_env
        path: /build_env

  - name: create linode
    image: registry.adamkoro.com/docker/hashicorp/terraform:1.5.5
    environment:
      TF_VAR_linode_token:
        from_secret: linode_token
      TF_VAR_linode_authorized_keys:
        from_secret: linode_authorized_keys
      TF_VAR_linode_label: swagger-ui-build
    commands:
      - export $(cat /build_env/linode_root_pass | xargs)
      - cd /build_env/setup
      - terraform -chdir=terraform/ init 
      - terraform -chdir=terraform/ plan
      - terraform -chdir=terraform/ apply -auto-approve
    volumes:
      - name: build_env
        path: /build_env
    when:
      status:
        - success

  - name: setup vm
    image: registry.adamkoro.com/library/ansible-helper:latest
    environment:
      ANSIBLE_USER: root
    commands:
      - cd /build_env/setup
      - ansible-galaxy collection install community.docker
      - ansible-playbook ansible/setup.yml -i $(cat /build_env/linode_ip_address | cut -d'=' -f2), -k $(cat /build_env/linode_root_pass | cut -d'=' -f2)
    volumes:
      - name: build_env
        path: /build_env
    when:
      status:
        - success
#- name: wait for docker service
#  image: docker:dind
#  volumes:
#    - name: dockersock
#      path: /var/run/
#  commands:
#  - while true; do docker info > /dev/null 2>&1 && echo "Docker server up" && break || (echo "Docker server down. Retrying..." && sleep 1); done


#- name: build image
#  image: docker:dind
#  environment:
#    REGISTRY_USER:
#      from_secret: registry_user
#    REGISTRY_PASSWORD:
#      from_secret: registry_password
#  volumes:
#    - name: dockersock
#      path: /var/run/
#  commands:
  #- docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD registry.adamkoro.com
  #- docker buildx create --use --name mybuilder
  #- docker buildx build --platform linux/amd64,linux/arm64 -t registry.adamkoro.com/library/go-swagger-ui:${DRONE_COMMIT_SHA:0:7} -t registry.adamkoro.com/library/go-swagger-ui:latest . --push -f Dockerfile


#- name: change image tag
#  image: harbor.adamkoro.com/bci/bci-base:15.4
#  commands:
#  - zypper ar http://download.opensuse.org/distribution/leap/15.4/repo/oss/ leap_15.4 && zypper -n --gpg-auto-import-keys ref && zypper -n in yq
#  - yq -i '.spec.template.spec.containers[0].image = "adamkoro/go-swagger-ui:${DRONE_COMMIT_SHA:0:7}"' k8s/deployment.yaml
#
#- name: push to repo
#  image: appleboy/drone-git-push
#  settings:
#    branch: main
#    remote: git@github.com:adamkoro/go-swagger-ui.git
#    force: false
#    commit: true
#    commit_message: "Update by Drone CI - image tag update"
#    author_name:
#      from_secret: github_username
#    author_email:
#      from_secret: github_email
#    ssh_key:
#      from_secret: github_private_ssh_key
#
  - name: delete linode
    image: registry.adamkoro.com/docker/hashicorp/terraform:1.5.5
    environment:
      TF_VAR_linode_token:
        from_secret: linode_token
      TF_VAR_linode_authorized_keys:
        from_secret: linode_authorized_keys
    commands:
      - export $(cat /build_env/linode_root_pass | xargs)
      - cd /build_env/setup
      - terraform -chdir=terraform/ init 
      - terraform -chdir=terraform/ destroy -auto-approve
    volumes:
      - name: build_env
        path: /build_env
    when:
      status:
        - failure
        - success


volumes:
  #- name: dockersock
  #  temp: {}
  - name: build_env
    temp: {}

node:
  type: hosted-amd64